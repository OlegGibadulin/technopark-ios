//: [Previous](@previous)
//: # Операторы
//:### Оператор — это специальный символ или выражение для проверки, изменения или сложения величин.


//:## Присваивания
// Оператор присваивания (a = b) инициализирует или изменяет значение переменной a на значение b
let b = 10
var a = 5
a = b
// теперь a равно 10
//:## Арифметические
/*:
 - сложение (+)
 - вычитание (-)
 - умножение (*)
 - деление (/)
*/
1 + 2 // равно 3
5 - 3 // равно 2
2 * 3 // равно 6
10.0 / 2.5 // равно 4.0

// Так же можно делать конкатенацию строк
"hello, " + "world"  // равно "hello, world"
//:## Целочисленного деления(деления по модулю)
9 % 4    // равно 1
//:### Оператор целочисленного деления работает следующим образом. Для вычисления выражения 9 % 4 сначала определяется, сколько четверок содержится в девятке:
//: ![Operator 1](Operator1.png)
//:## Cравнения
/*:
 - равно (a == b)
 - не равно (a != b)
 - больше (a > b)
 - меньше (a < b)
 - больше или равно (a >= b)
 - меньше или равно (a <= b)
*/

1 == 1 // истина, так как 1 равно 1
2 != 1 // истина, так как 2 не равно 1
2 > 1 // истина, так как 2 больше чем 1
1 < 2 // истина, так как 1 меньше 2
1 >= 1 // истина, так как 1 больше либо равно 1
2 <= 1 // ложь, так как 2 не меньше либо равно 1

//:## Тернарный
//:### Тернарный условный оператор — это специальный оператор из трех частей, имеющий следующий синтаксис: выражение ? действие1 : действие2. Он выполняет одно из двух действий в зависимости от того, является ли выражение true или false.

/*:
 Тернарный условный оператор является краткой записью следующего кода:

    if выражение {
     действие1
    } else {
     действие2
    }
*/
let contentHeight = 40
let hasHeader = true
let rowHeight = contentHeight + (hasHeader ? 50 : 20)
// rowHeight равно ?
/*:
 * Experiment:
 Какое значение будет у переменной rowHeight?
*/

//: [Next](@next)
